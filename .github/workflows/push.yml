name: notifi
on: [push]

jobs:
  test:
    name: Test with version
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        go: ['1.12', '1.13', '1.14']

    steps:
      - uses: actions/checkout@v1

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Fetch cached dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests
        env:
          encryption_key: "46wyK8kZeHziiPMMGpZsE0UF1xTmrWB2"
          db: "root:root@"
          server_key: "46wyK8kZeHziiPMMGpZsE0UF1xTmrWB2"
          redis: "127.0.0.1:6379"
        run: go test ./... -v -covermode=count -coverprofile=coverage.out

      - uses: codecov/codecov-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Publish Docker image
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish image to Docker Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ github.repository }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ${{ github.workspace }}
          tags: latest,${{ steps.tag.outputs.new_tag }}
